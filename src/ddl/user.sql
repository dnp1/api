CREATE TABLE "user" (
  id                INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  external_id       UUID UNIQUE DEFAULT gen_random_uuid() NOT NULL,
  creation_datetime TIMESTAMP DEFAULT current_timestamp
);

CREATE OR REPLACE FUNCTION get_user_id(external_id_ UUID)
  RETURNS INT AS
$$
SELECT id
FROM "user"
WHERE external_id = external_id_;
$$ LANGUAGE SQL STRICT;


CREATE TABLE email (
  id                INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  address           VARCHAR(255) UNIQUE CHECK (address ~ '^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'),
  creation_datetime TIMESTAMP DEFAULT current_timestamp
);

CREATE INDEX ON email (address);

CREATE TABLE user_email_assignment (
  id                INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email_id"        INT REFERENCES email (id)  NOT NULL,
  "user_id"         INT REFERENCES "user" (id) NOT NULL,
  creation_datetime TIMESTAMP DEFAULT current_timestamp,
  UNIQUE ("user_id", "id")
);

CREATE TABLE user_email (
  id                  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email_assignment_id INT REFERENCES user_email_assignment (id) NOT NULL,
  user_id             INT REFERENCES "user" (id) UNIQUE,
  creation_datetime   TIMESTAMP DEFAULT current_timestamp,
  FOREIGN KEY (user_id, email_assignment_id) REFERENCES user_email_assignment (user_id, id)
);

CREATE TABLE user_password_assignment (
  id                INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id           INT REFERENCES "user" (id) NOT NULL,
  password          TEXT                       NOT NULL,
  creation_datetime TIMESTAMP DEFAULT current_timestamp,
  UNIQUE (user_id, id)
);

CREATE TABLE user_password (
  id                          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id                     INT REFERENCES "user" (id) NOT NULL UNIQUE,
  user_password_assignment_id INT REFERENCES user_password_assignment (id),
  creation_datetime            TIMESTAMP DEFAULT current_timestamp,
  FOREIGN KEY (user_id, user_password_assignment_id) REFERENCES user_password_assignment (user_id, id)
);

CREATE TABLE user_name_assignment (
  id                INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id           INT REFERENCES "user" (id) NOT NULL,
  family_name       TEXT                       NOT NULL,
  given_name        TEXT                       NOT NULL,
  creation_datetime TIMESTAMP DEFAULT current_timestamp,
  UNIQUE (user_id, id)
);

CREATE TABLE user_name (
  id                      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id                 INT REFERENCES "user" (id) NOT NULL UNIQUE,
  user_name_assignment_id INT REFERENCES user_name_assignment (id),
  creation_datetime       TIMESTAMP DEFAULT current_timestamp,
  FOREIGN KEY (user_id, user_name_assignment_id) REFERENCES user_name_assignment (user_id, id)
);

CREATE TABLE user_avatar_assignment (
  id                INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id           INT REFERENCES "user" (id) NOT NULL,
  file_id           UUID                       NOT NULL,
  creation_datetime TIMESTAMP DEFAULT current_timestamp,
  UNIQUE (user_id, id)
);

CREATE TABLE user_avatar (
  id                        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id                   INT REFERENCES "user" (id) NOT NULL UNIQUE,
  user_avatar_assignment_id INT REFERENCES user_avatar_assignment (id),
  creation_datetime         TIMESTAMP DEFAULT current_timestamp,
  FOREIGN KEY (user_id, user_avatar_assignment_id) REFERENCES user_avatar_assignment (user_id, id)
);